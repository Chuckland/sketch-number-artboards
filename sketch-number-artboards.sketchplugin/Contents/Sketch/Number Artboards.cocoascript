@import 'shared.js'

var getUserParameters = function(defaults) {
    var window = COSAlertWindow.new();
    window.setMessageText("Number Artboards")

    window.addTextLabelWithValue("Number Order:");
    window.addAccessoryView(com.adordzheev.createButtons(["By Columns", "By Rows"], defaults.values.order));

    window.addTextLabelWithValue("Number Style:");
    window.addAccessoryView(com.adordzheev.createButtons(["1, 2, 3...", "1_01, 1_02, 2_01..."], defaults.values.style));

    window.addTextLabelWithValue("Delimiter:");
    window.addTextFieldWithValue(defaults.values.delimiter);

    window.addButtonWithTitle("OK");
    window.addButtonWithTitle("Cancel");

    var sortBox = NSButton.alloc().initWithFrame(NSMakeRect(0,0,250,25));
    sortBox.setTitle("Sort artboards in layers list");
    sortBox.setButtonType(NSSwitchButton);
    sortBox.setState(defaults.values.sort);

    window.addAccessoryView(sortBox);

    return {
        button: window.runModal(),
        order: [[[window viewAtIndex:1] selectedCell] tag],
        style: [[[window viewAtIndex:3] selectedCell] tag],
        delimiter: [[window viewAtIndex:5] stringValue],
        sort: sortBox.state()
    };
};

var onRun = function(context) {
    var sketch = context.api(),
        selectedLayers = sketch.selectedDocument.selectedLayers,
        initialValues = {
            order: 0,
            style: 0,
            delimiter: '_',
            sort: false
        },
        defaults = new DefaultsManager("com.adordzheev.sketch-number-artboards");

    defaults.init(initialValues);

    if (selectedLayers.length === 0) {
        sketch.message("Select at least one artboard");
        return;
    }

    var userParameters = getUserParameters(defaults);

    if (userParameters.button == 1000) {
        defaults.save({
            order: userParameters.order,
            style: userParameters.style,
            delimiter: userParameters.delimiter,
            sort: userParameters.sort
         });

        var artboardsMeta = com.adordzheev.collectArtboardsMeta(selectedLayers);

        var sortMethod = (userParameters.order === 0)
            ? com.adordzheev.sortByColumns
            : com.adordzheev.sortByRows;

        try {
            artboardsMeta.sort(sortMethod);

            var artboardsMetaArray = [],
                layer;

            // Choose how to number artboards by specified number style
            if (userParameters.style === 0) {
                for (var i = 0; i < artboardsMeta.length; i++) {
                    layer = artboardsMeta[i].layer;
                    com.adordzheev.simpleNumberArtboards(
                        layer, i, userParameters.delimiter);
                    artboardsMetaArray.push(layer);
                }
            } else {
                var serie = 0,
                    number = 0,
                    prevLayer;

                for (var i = 0; i < artboardsMeta.length; i++) {
                    layer = artboardsMeta[i].layer;
                    if (prevLayer) {
                        var p1 = userParameters.order === 0 ? layer.frame.x : layer.frame.y,
                            p2 = userParameters.order === 0 ? prevLayer.frame.x : prevLayer.frame.y;
                        if (p1 > p2) {
                            serie++;
                            number = 0;
                        } else {
                            number++;
                        }
                    }
                    com.adordzheev.numberArtboardsBySeries(
                        layer, serie, number, userParameters.delimiter);
                    artboardsMetaArray.push(layer);
                    prevLayer = layer;
                }
            }

            // sort layer list
            if (userParameters.sort) {
                com.adordzheev.sortIndices(artboardsMetaArray);
            }
        } catch (e) {
            sketch.message(e.message);
        }
    }
}
